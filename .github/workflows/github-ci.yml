name: BRMED CI/CD pipeline

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
jobs:
  deployment:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        pip install --upgrade pip
        pip install poetry
        poetry install --with dev

    # - name: Check Linters
    #   run: |
    #     make lint

    - name: Run Tests
      env:
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_HOST: localhost
        DB_PORT: 5432
        BASE_SYMBOL: "USD"
        VATCOMPLY_URL: ${{ secrets.VATCOMPLY_URL }}
        MAX_WORKING_DAYS_RESULT: 5
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: true
      run: |
        make test

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Login to Heroku
      run: heroku container:login

    - name: Build and push Docker image to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        APP_VERSION: ${{ vars.MY_NEW_APP_VERSION }}
      run: |
        echo $HEROKU_API_KEY | docker login --username=_ --password-stdin registry.heroku.com
        docker build -t brmed-app .
        docker tag brmed-app registry.heroku.com/brmed-app/web:$APP_VERSION
        docker push registry.heroku.com/brmed-app/web:$APP_VERSION

    - name: Release to Heroku
      run: heroku container:release web:$APP_VERSION -a brmed-app
